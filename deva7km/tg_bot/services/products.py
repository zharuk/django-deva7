import logging
from urllib.parse import urljoin
from aiogram import Bot
from aiogram.types import URLInputFile
from aiogram.utils.markdown import hbold
from asgiref.sync import sync_to_async
from catalog.models import Product, ProductModification
try:
    from deva7km.local_settings import BOT_TOKEN, BASE_URL
except ImportError:
    from deva7km.prod_settings import BOT_TOKEN, BASE_URL


bot: Bot = Bot(token=BOT_TOKEN, parse_mode='HTML')


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–∞
@sync_to_async
def get_modifications_info(sku):
    try:
        # –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
        product = Product.objects.get(sku=sku)
    except Product.DoesNotExist:
        return "–¢–æ–≤–∞—Ä —Å –¥–∞–Ω–Ω—ã–º –∞—Ä—Ç–∏–∫—É–ª–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω."

    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ–º —Å–æ–±–∏—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö
    result = ""

    result += hbold(f"üì¶ –¢–æ–≤–∞—Ä: {product.title}\n")
    result += hbold(f"üßæ –ê—Ä—Ç–∏–∫—É–ª: {product.sku}\n")
    result += hbold(f"üíµ –¶–µ–Ω–∞: {product.price} ({product.currency})\n\n")
    if product.sale_price:
        result += hbold(f"üí∞ –¶–µ–Ω–∞ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏: {product.sale_price} ({product.currency})\n\n")
    result += hbold(f"üìí –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏:\n\n")

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    for modification in product.modifications.all().order_by('color__name'):
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
        modification_info = (
            f"‚û°Ô∏èÔ∏è –¶–≤–µ—Ç: {modification.color.name}\n"
            f"‚û°Ô∏èÔ∏è –†–∞–∑–º–µ—Ä: {modification.size.name}\n"
        )
        modification_info += f"‚úÖÔ∏èÔ∏è –ù–∞ —Å–∫–ª–∞–¥–µ: {modification.stock} —à—Ç.\n" if modification.stock > 0 else "‚õîÔ∏è –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏\n"
        result += modification_info + "\n"

    return result


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –±–æ–ª—å—à–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
@sync_to_async
def get_large_image_url_input_file(custom_sku):
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ custom_sku
    product_modification = ProductModification.objects.get(custom_sku=custom_sku)

    # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
    large_image_url = product_modification.get_first_large_image_modification_url()

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç URLInputFile
    image = URLInputFile(large_image_url)

    return image


@sync_to_async
def get_collage_image_for_product(sku):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
        product = Product.objects.get(sku=sku)

        # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–ª–∞–∂–∞
        collage_image_url = product.collage_image_url()

        return collage_image_url

    except Product.DoesNotExist:
        logging.error("–û—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä —Å –¥–∞–Ω–Ω—ã–º –∞—Ä—Ç–∏–∫—É–ª–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return None
    except Exception as e:
        logging.exception(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        return None