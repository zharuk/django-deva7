from aiogram import Router, Bot
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.utils.markdown import hbold
from deva7km.settings import BOT_TOKEN
from tg_bot.FSM.fsm import InventoryStates
from tg_bot.keyboards.keyboards import create_inline_kb_main_sku, create_inline_kb_modifications, \
    create_inline_kb_numbers, create_main_menu_kb
from tg_bot.services.inventory import create_inventory
from tg_bot.services.products import get_large_image_url_input_file
from tg_bot.services.users import admin_access_control_decorator, get_or_create_telegram_user

router: Router = Router()
bot: Bot = Bot(token=BOT_TOKEN, parse_mode='HTML')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /sell
@router.message(Command('inventory'))
@admin_access_control_decorator(access='admin')
async def command_sell_handler(message: Message, state: FSMContext):
    await state.clear()
    await state.set_state(InventoryStates.choosingSKU)
    kb = await create_inline_kb_main_sku(callback='inventory')
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –æ–ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è üëá', reply_markup=kb)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –±—ã –æ—Ç–ª–∞–≤–ª–∏–≤–∞–ª callback_query=sell
@router.callback_query(lambda callback: 'inventory' == callback.data)
@admin_access_control_decorator(access='admin')
async def process_callback_query_sell(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await state.set_state(InventoryStates.choosingSKU)
    kb = await create_inline_kb_main_sku(callback='inventory')
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –æ–ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è üëá', reply_markup=kb)
    await callback.answer()


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –±—ã –æ—Ç–ª–∞–≤–ª–∏–≤–∞–ª callback_query=sku –¥–ª—è inventory –∏ –≤—ã–≤–æ–¥–∏–ª –∫–Ω–æ–ø–∫–∏ —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
@router.callback_query(StateFilter(InventoryStates.choosingSKU))
@admin_access_control_decorator(access='admin')
async def process_callback_query_sku(callback: CallbackQuery, state: FSMContext):
    if '_main_sku_inventory' in callback.data:
        sku = callback.data.split("_")[0]
        await state.set_state(InventoryStates.choosingModification)
        await state.update_data(choosingSKU=sku)
        user_data = await state.get_data()
        kb = await create_inline_kb_modifications(sku, callback='inventory')
        await callback.message.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –æ–ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª—å ‚û°Ô∏è {hbold(user_data["choosingSKU"])}\n–≤—ã–±–µ—Ä–∏—Ç–µ '
                                      f'–º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é üëá', reply_markup=kb)
        await callback.answer()
    else:
        await callback.message.answer('–≤—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –æ—Ç–º–µ–Ω–∞! üëÜ')
        await callback.answer()


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –±—ã –æ—Ç–ª–∞–≤–ª–∏–≤–∞–ª callback_query=modifications –¥–ª—è inventory –∏ –≤—ã–≤–æ–¥–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
# —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –æ—Å—Ç–∞—Ç–∫–µ, –∞ —Ç–∞–∫–∂–µ —É–∫–∞–∑–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å
@router.callback_query(StateFilter(InventoryStates.choosingModification))
@admin_access_control_decorator(access='admin')
async def process_callback_query_modifications(callback: CallbackQuery, state: FSMContext):
    if '_modification_inventory' in callback.data:
        custom_sku = callback.data.split("_")[0]
        await state.set_state(InventoryStates.enteringQuantity)
        await state.update_data(choosingModification=custom_sku)
        user_data = await state.get_data()
        custom_sku = user_data['choosingModification']
        thumbnail_input_file = await get_large_image_url_input_file(custom_sku)
        kb = await create_inline_kb_numbers(quantity=50)
        await bot.send_photo(chat_id=callback.from_user.id,
                             photo=thumbnail_input_file,
                             caption=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –æ–ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é ‚û°Ô∏è {hbold(user_data["choosingModification"])}\n'
                                     f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ–ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è:', reply_markup=kb)
        await callback.answer()
    else:
        await callback.message.answer('–≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –æ—Ç–º–µ–Ω–∞! üëÜ')
        await callback.answer()


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –±—ã –æ—Ç–ª–∞–≤–ª–∏–≤–∞–ª callback_query=numbers –¥–ª—è inventory
@router.callback_query(StateFilter(InventoryStates.enteringQuantity))
@admin_access_control_decorator(access='admin')
async def process_callback_query_numbers(callback: CallbackQuery, state: FSMContext):
    if callback.data.isdigit():
        await state.set_state(InventoryStates.finish)
        await state.update_data(enteringQuantity=callback.data)
        # –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_id = callback.from_user.id
        user_name = callback.from_user.username
        user_first_name = callback.from_user.first_name
        user_last_name = callback.from_user.last_name
        telegram_user = await get_or_create_telegram_user(user_id, user_name, user_first_name, user_last_name)
        user_data = await state.get_data()
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞
        inventory = await create_inventory(user_data, telegram_user)
        if inventory:
            await state.clear()
            kb = await create_main_menu_kb()
            custom_sku = user_data['choosingModification']
            thumbnail_input_file = await get_large_image_url_input_file(custom_sku)
            await bot.send_photo(chat_id=callback.from_user.id,
                                 photo=thumbnail_input_file,
                                 caption=f'‚úÖ –û–ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –Ω–∞ —Å—É–º–º—É {inventory.total_amount}\n\n'
                                         f'–≤—ã –æ–ø—Ä–∏—Ö–æ–¥–æ–≤–∞–ª–∏ {user_data["choosingModification"]}\n'
                                         f'–≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ {user_data["enteringQuantity"]}—à—Ç.\n', reply_markup=kb)
            await callback.answer()
        else:
            await callback.message.answer('‚õîÔ∏è ProductModification –Ω–µ –Ω–∞–π–¥–µ–Ω')
